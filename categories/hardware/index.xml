<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hardware on Favas M</title><link>https://favas.dev/categories/hardware/</link><description>Recent content in Hardware on Favas M</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 06 Oct 2024 09:25:54 +0530</lastBuildDate><atom:link href="https://favas.dev/categories/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>Photon Lockdown Walkthrough - HackTheBox</title><link>https://favas.dev/blogs/hackthebox/challenges/hardware/photon_lockdown/</link><pubDate>Sun, 06 Oct 2024 09:25:54 +0530</pubDate><guid>https://favas.dev/blogs/hackthebox/challenges/hardware/photon_lockdown/</guid><description>&lt;p>In this article, I’ll walk you through solving the &lt;strong>Photon Lockdown&lt;/strong> hardware challenge from the platform &lt;a href="https://hackthebox.eu">HackTheBox&lt;/a>.&lt;/p>
&lt;p>Challenge description is the following block of text:&lt;/p>
&lt;blockquote>
&lt;p>We&amp;rsquo;ve located the adversary&amp;rsquo;s location and must now secure access to their Optical Network Terminal to disable their internet connection. Fortunately, we&amp;rsquo;ve obtained a copy of the device&amp;rsquo;s firmware, which is suspected to contain hardcoded credentials. Can you extract the password from it?&lt;/p>
&lt;/blockquote>
&lt;p>The objective seems to be find some hard-coded credentials hidden in these files. I downloaded the challenge files, which seem to be firmware files according to the description.&lt;/p></description><content>&lt;p>In this article, I’ll walk you through solving the &lt;strong>Photon Lockdown&lt;/strong> hardware challenge from the platform &lt;a href="https://hackthebox.eu">HackTheBox&lt;/a>.&lt;/p>
&lt;p>Challenge description is the following block of text:&lt;/p>
&lt;blockquote>
&lt;p>We&amp;rsquo;ve located the adversary&amp;rsquo;s location and must now secure access to their Optical Network Terminal to disable their internet connection. Fortunately, we&amp;rsquo;ve obtained a copy of the device&amp;rsquo;s firmware, which is suspected to contain hardcoded credentials. Can you extract the password from it?&lt;/p>
&lt;/blockquote>
&lt;p>The objective seems to be find some hard-coded credentials hidden in these files. I downloaded the challenge files, which seem to be firmware files according to the description.&lt;/p>
&lt;p>The challenge file contains a single zip named &amp;lsquo;Photon Lockdown.zip&amp;rsquo;. When I extracted it using &lt;code>unzip 'Photon Lockdown.zip'&lt;/code>, it revealed a directory named &lt;strong>ONT&lt;/strong> with three files in it:&lt;/p>
&lt;ul>
&lt;li>&lt;em>fwu_ver&lt;/em>&lt;/li>
&lt;li>&lt;em>hw_ver&lt;/em>&lt;/li>
&lt;li>&lt;em>rootfs&lt;/em>&lt;/li>
&lt;/ul>
&lt;p>First, I checked what these files contained. The &lt;em>fwu_ver&lt;/em> file had raw text data: &lt;strong>3.0.5&lt;/strong>. Based on the file name and the content, it&amp;rsquo;s safe to assume this might be the firmware version.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ file fwu_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fwu_ver: ASCII text
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat fwu_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3.0.5
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The second file, &lt;em>hw_ver&lt;/em>, seemed to contain some kind of archived data. So, I thought, why not try to extract it? But I couldn’t. That’s when I decided to check the file size, and to my surprise, it was only 3 bytes. This means it likely isn’t an archive, or there’s nothing useful inside. Still, I ran the &lt;code>cat&lt;/code> command on the file just to be sure, and it returned a simple string: &amp;ldquo;X1&amp;rdquo; and nothing else. We can safely assume this represents some kind of hardware version.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ file hw_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hw_ver: X1 archive data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -la
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-r--r-- &lt;span style="color:#ae81ff">6&lt;/span> clevrf0x &lt;span style="color:#ae81ff">11&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> fwu_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-r--r-- &lt;span style="color:#ae81ff">3&lt;/span> clevrf0x &lt;span style="color:#ae81ff">11&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> hw_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-r--r-- 11M clevrf0x &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> rootfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat hw_ver
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> X1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The final file is called &lt;em>rootfs&lt;/em>, and from the name, we can guess it’s the firmware’s root file system. To confirm, I ran the &lt;code>file&lt;/code> command, which backed up my suspicion.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ file rootfs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rootfs: Squashfs filesystem, little endian, version 4.0, zlib compressed, &lt;span style="color:#ae81ff">10936182&lt;/span> bytes, &lt;span style="color:#ae81ff">910&lt;/span> inodes, blocksize: &lt;span style="color:#ae81ff">1310&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">72&lt;/span> bytes, created: Sun Oct &lt;span style="color:#ae81ff">1&lt;/span> 07:02:43 &lt;span style="color:#ae81ff">2023&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The next step is to mount the file system and explore its contents. Let’s create a temporary directory to mount the file system, and then proceed with mounting it.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ mkdir fw_fs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo mount rootfs ./fw_fs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let’s &lt;code>cd&lt;/code> into the newly mounted directory and check what it contains.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ls -la
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-rw-r-- &lt;span style="color:#ae81ff">0&lt;/span> root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> .lstripped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> config -&amp;gt; ./var/config/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> etc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> image
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> lib
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> mnt -&amp;gt; /var/mnt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> overlay
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> proc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> run
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> sbin -&amp;gt; /bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> tmp -&amp;gt; /var/tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> usr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> var
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, there’s a &lt;em>config&lt;/em> file symlinked to &lt;em>./var/config/&lt;/em>, so I initially tried exploring that. However, the symlink was broken, and the &lt;em>/var&lt;/em> directory was empty. Then, I noticed the &lt;em>/home&lt;/em> directory and checked if it contained anything useful. It did, in fact, have a hidden directory with a file inside. I quickly read through it, but it didn’t contain the flag. However, it did have a string: &amp;ldquo;almost there,&amp;rdquo; which means we’re on the right track.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ls -la home
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxr-xr-x - root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> .41fr3d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -la home/.41fr3d0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-r--r-- &lt;span style="color:#ae81ff">13&lt;/span> root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> s.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ cat home/41fr3d0/s.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> almost there
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So where could the flag be? I then looked into the &lt;em>etc&lt;/em> directory since that&amp;rsquo;s where Unix/Linux-based systems generally store application-specific config files. I found an interesting file there. Remember the broken &lt;em>config&lt;/em> file located in the root directory? The &lt;em>etc&lt;/em> directory also had a &lt;em>config&lt;/em> file, along with a &lt;em>config_default.xml&lt;/em>. That looked promising, so I opened it in &lt;code>vim&lt;/code> and searched for anything related to the flag. It contained a lot of application-specific config options, including hard-coded credentials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ ls -la etc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> config -&amp;gt; /var/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rwxrwxr-x 51k root &lt;span style="color:#ae81ff">1&lt;/span> Oct &lt;span style="color:#ae81ff">2023&lt;/span> config_default.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rwxrwxr-x &lt;span style="color:#ae81ff">185&lt;/span> root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> config_default_hs.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> cups
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rwxrwxr-x 18k root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> dhclient-script
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rwxrwxr-x 19k root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> dnsmasq.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rwxrwxr-x 1.1k root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> ethertypes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-rw-r-- &lt;span style="color:#ae81ff">637&lt;/span> root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> fstab
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lrwxrwxrwx - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> group -&amp;gt; /var/group
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .rw-rw-r-- &lt;span style="color:#ae81ff">127&lt;/span> root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> inetd.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> drwxrwxr-x - root &lt;span style="color:#ae81ff">10&lt;/span> Aug &lt;span style="color:#ae81ff">2022&lt;/span> init.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ vim etc/config_default.xml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;Value Name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;SUSER_NAME&amp;#34;&lt;/span> Value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;admin&amp;#34;&lt;/span>/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;Value Name&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;SUSER_PASSWORD&amp;#34;&lt;/span> Value&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;HTB{N0******************1n}&amp;#34;&lt;/span>/&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So, let&amp;rsquo;s unmount the file system since it is no longer needed and then submit the flag.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cd ..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo umount ./fw_fs
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></content></item></channel></rss>